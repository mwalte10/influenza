list[j] <- paste(unlist(aa_gen[main,5]), collapse = '') == paste(unlist(aa_gen[neighbor,5]), collapse = '')
}
binary.synon[[i]] <- list
}
binary.synon
i <- 1
main <- which(aa_gen[,4] == unlist(top.labels[i]))
main
list <- c()
j <- 1
neighbor <- which(aa_gen[,4] == list.neighbors[[i]][j])
neighbor
paste(unlist(aa_gen[main,5]), collapse = '')
paste(unlist(aa_gen[neighbor,5]), collapse = '')
obs_synon <- c()
for(i in 1:ncol(prev)){
obs_synon[i] <- length(which(binary.synon[[i]] == TRUE)) / length(binary.synon[[i]])
}
obs_synon <- c()
for(i in 1:length(top.labels)){
obs_synon[i] <- length(which(binary.synon[[i]] == TRUE)) / length(binary.synon[[i]])
}
obs_synon
i <- 1
main <- which(aa_gen[,4] == unlist(top.labels[i]))
list <- c()
list.neighbors[[i]]
j
list.neighbors[[i]][j]
main
aa_gen[7439,4]
aa_gen[main,5])
aa_gen[main,5]
neighbor <- which(aa_gen[,4] == list.neighbors[[i]][j])
aa_gen[neighbor,5]
paste(unlist(aa_gen[main,5]), collapse = '') == paste(unlist(aa_gen[neighbor,5]), collapse = '')
obs_synon
t.test(obs_synon, synon_rate)
i <- 1
main <- which(aa_gen[,4] == unlist(top.labels[i]))
list <- c()
j <- 1
neighbor <- which(aa_gen[,4] == list.neighbors[[i]][j])
main
neighbor
which(dna_gen[,4] == aa_gen[main,4])
aa_gen[main, 44]
aa_gen[main, 4]
dna_gen[,4]
which(unlist(dna_gen[,4]) == unname(aa_gen[main,4]))
which(unlist(dna_gen[,4]) == unname(aa_gen[neighbor,4]))
main_seq <- dna_gen[6882, 5]
main_seq
neighbor_seq <- dna_gen[23600, 5]
neighbor_seq
match(neighbor_seq, main_seq)
length(neighbor_seq)
match(unlist(neighbor_seq), unlist(main_seq))
main_seq <- unlist(main_seq)
neighbor_seq <- unlist(neighbor_seq)
length(main_seq)
length(neighbor_seq)
566 * 3
main_seq <- main_seq[1:1698]
neighbor_seq <- neighbor_seq[1:1698]
i <- 1
main_seq[i] == neighbor_seq[i]
no_match <- c()
for(i in 1:length(main_seq)){
no_match[i] <- main_seq[i] == neighbor_seq[i]
}
no_match
length(which(no_match == FALSE))
list.neighbors[[1]]
cluster_one <- list.neighbors
i <- 1
index <- which(labels_vec == cluster_one[i])
index
cluster_one[1]
cluster_one <- list.neighbors[[1]]
cluster_one
index <- which(labels_vec == cluster_one[i])
index
labels_vec[which(dist_mat[,index] == 1)]
neighbors <- labels_vec[which(dist_mat[,index] == 1)]
main <- which(aa_gen[,4] == cluster_one[i])
main
main_seq <- paste(unlist(aa_gen[main,5]), collapse = '')
main_seq
j <- 1
neighbor <- which(aa_gen[,4] == neighbors[j])
neighbor
neighbor_seq <- paste(unlist(aa_gen[neighbor,5], collapse = ''))
neighbor_seq <- paste(unlist(aa_gen[neighbor,5]), collapse = '')
neighbor_seq
main_seq == neighbor_seq
unlist(aa_gen[main,5])
length(unlist(aa_gen[main,5]))
length(unlist(aa_gen[neighbor,5])
)
i <- 1
cluster <- list.neighbors[[i]]
cluster_list <- list()
for(j in 1:length(cluster)){
index <- which(labels_vec == cluster_one[j])
neighbors <- labels_vec[which(dist_mat[,index] == 1)]
main <- which(aa_gen[,4] == cluster_one[i])
main_seq <- paste(unlist(aa_gen[main,5]), collapse = '')
synon <- c()
for(k in 1:length(neighbors)){
neighbor <- which(aa_gen[,4] == neighbors[k])
neighbor_seq <- paste(unlist(aa_gen[neighbor,5]), collapse = '')
synon[i] <- main_seq == neighbor_seq
}
cluster_list[[i]] <- synon
}
cluster_list
cluster
j <- 1
index <- which(labels_vec == cluster_one[j])
index
neighbors <- labels_vec[which(dist_mat[,index] == 1)]
neighbors
main <- which(aa_gen[,4] == cluster_one[j])
main_seq <- paste(unlist(aa_gen[main,5]), collapse = '')
main_seq
synon <- c()
k <- 1
neighbor <- which(aa_gen[,4] == neighbors[k])
neighbor_seq <- paste(unlist(aa_gen[neighbor,5]), collapse = '')
synon[i] <- main_seq == neighbor_seq
synon
synon <- c()
for(k in 1:length(neighbors)){
neighbor <- which(aa_gen[,4] == neighbors[k])
neighbor_seq <- paste(unlist(aa_gen[neighbor,5]), collapse = '')
synon[i] <- main_seq == neighbor_seq
}
synon
synon <- c()
for(k in 1:length(neighbors)){
neighbor <- which(aa_gen[,4] == neighbors[k])
neighbor_seq <- paste(unlist(aa_gen[neighbor,5]), collapse = '')
synon[k] <- main_seq == neighbor_seq
}
synon
all_list <- list()
for(i in 1:20){
cluster <- list.neighbors[[i]]
cluster_list <- list()
for(j in 1:length(cluster)){
index <- which(labels_vec == cluster_one[j])
neighbors <- labels_vec[which(dist_mat[,index] == 1)]
main <- which(aa_gen[,4] == cluster_one[j])
main_seq <- paste(unlist(aa_gen[main,5]), collapse = '')
synon <- c()
for(k in 1:length(neighbors)){
neighbor <- which(aa_gen[,4] == neighbors[k])
neighbor_seq <- paste(unlist(aa_gen[neighbor,5]), collapse = '')
synon[k] <- main_seq == neighbor_seq
}
cluster_list[[j]] <- synon
}
all_list[[i]] <- cluster_list
}
all_list
i <- 1
cluster <- list.neighbors[[i]]
cluster_list <- list()
for(j in 1:length(cluster)){
index <- which(labels_vec == cluster_one[j])
neighbors <- labels_vec[which(dist_mat[,index] == 1)]
main <- which(aa_gen[,4] == cluster_one[j])
main_seq <- paste(unlist(aa_gen[main,5]), collapse = '')
synon <- c()
for(k in 1:length(neighbors)){
neighbor <- which(aa_gen[,4] == neighbors[k])
neighbor_seq <- paste(unlist(aa_gen[neighbor,5]), collapse = '')
synon[k] <- main_seq == neighbor_seq
}
cluster_list[[j]] <- synon
}
cluster_list
cluster <- list.neighbors[[i]]
cluster_list <- list()
for(j in 1:length(cluster)){
index <- which(labels_vec == cluster_one[j])
neighbors <- labels_vec[which(dist_mat[,index] == 1)]
main <- which(aa_gen[,4] == cluster_one[j])
main_seq <- paste(unlist(aa_gen[main,5]), collapse = '')
synon <- c()
for(k in 1:length(neighbors)){
neighbor <- which(aa_gen[,4] == neighbors[k])
neighbor_seq <- paste(unlist(aa_gen[neighbor,5]), collapse = '')
synon[k] <- main_seq == neighbor_seq
}
cluster_list[[j]] <- unlist(synon)
}
cluster_list
cluster <- list.neighbors[[i]]
cluster_list <- c()
for(j in 1:length(cluster)){
index <- which(labels_vec == cluster_one[j])
neighbors <- labels_vec[which(dist_mat[,index] == 1)]
main <- which(aa_gen[,4] == cluster_one[j])
main_seq <- paste(unlist(aa_gen[main,5]), collapse = '')
synon <- c()
for(k in 1:length(neighbors)){
neighbor <- which(aa_gen[,4] == neighbors[k])
neighbor_seq <- paste(unlist(aa_gen[neighbor,5]), collapse = '')
synon[k] <- main_seq == neighbor_seq
}
cluster_list[j] <- unlist(synon)
}
cluster_list
cluster_list <- list()
for(j in 1:length(cluster)){
index <- which(labels_vec == cluster_one[j])
neighbors <- labels_vec[which(dist_mat[,index] == 1)]
main <- which(aa_gen[,4] == cluster_one[j])
main_seq <- paste(unlist(aa_gen[main,5]), collapse = '')
synon <- c()
for(k in 1:length(neighbors)){
neighbor <- which(aa_gen[,4] == neighbors[k])
neighbor_seq <- paste(unlist(aa_gen[neighbor,5]), collapse = '')
synon[k] <- main_seq == neighbor_seq
}
cluster_list[[j]] <- unlist(synon)
}
cluster_list
unlist(cluster_list)
all_list <- list()
for(i in 1:20){
cluster <- list.neighbors[[i]]
cluster_list <- list()
for(j in 1:length(cluster)){
index <- which(labels_vec == cluster_one[j])
neighbors <- labels_vec[which(dist_mat[,index] == 1)]
main <- which(aa_gen[,4] == cluster_one[j])
main_seq <- paste(unlist(aa_gen[main,5]), collapse = '')
synon <- c()
for(k in 1:length(neighbors)){
neighbor <- which(aa_gen[,4] == neighbors[k])
neighbor_seq <- paste(unlist(aa_gen[neighbor,5]), collapse = '')
synon[k] <- main_seq == neighbor_seq
}
cluster_list[[j]] <- unlist(synon)
}
all_list[[i]] <- unlist(cluster_list)
}
all_list
obs_synon <- c()
for(i in 1:length(20)){
obs_synon[i] <- length(which(all_list[[i]] == TRUE)) / length(all_list[[i]])
}
obs_synon
i
obs_synon <- c()
for(i in 1:20){
obs_synon[i] <- length(which(all_list[[i]] == TRUE)) / length(all_list[[i]])
}
obs_synon
synon_rate
t.test(obs_synon, synon_rate)
plot(obs_synon)
i <- 1
length(list.neighbors[[i]])
sizes <- c()
for(i in 1:20){
sizes[i] <- length(list.neighbors[[i]])
}
sizes
plot(x = sizes, y = obs_synon, type = 'l')
plot(x = sizes, y = obs_synon, type = 'l', xlab = "Cluster Size", ylab = "Observed Synonymous Mutation Rate",
ylim = c(0.5, 1, by 0.1))
plot(x = sizes, y = obs_synon, type = 'l', xlab = "Cluster Size", ylab = "Observed Synonymous Mutation Rate",
ylim = c(0.5, 1, by =0.1))
plot(x = sizes, y = obs_synon, type = 'l', xlab = "Cluster Size", ylab = "Observed Synonymous Mutation Rate",
ylim = seq(0.5, 1, at = 0.1))
plot(x = sizes, y = obs_synon, type = 'l', xlab = "Cluster Size", ylab = "Observed Synonymous Mutation Rate",
ylim = seq(0.5, 1))
plot(x = sizes, y = obs_synon, type = 'l', xlab = "Cluster Size", ylab = "Observed Synonymous Mutation Rate",
ylim = c(0.5, 1))
plot(x = sizes, y = obs_synon, type = 'l', xlab = "Cluster Size", ylab = "Observed Synonymous \nMutation Rate",
ylim = c(0.5, 1))
plot(x = sizes, y = obs_synon, type = 'l', xlab = "Cluster \nSize", ylab = "Observed Synonymous \nMutation Rate",
main = "Correlation between cluster size \nand observed mutation rate"
ylim = c(0.5, 0.9))
plot(x = sizes, y = obs_synon, type = 'l', xlab = "Cluster \nSize", ylab = "Observed Synonymous \nMutation Rate",
main = "Correlation between cluster size \nand observed mutation rate",
ylim = c(0.5, 0.9))
lm(log(obs_synon)~ sizes)
model <- lm(log(obs_synon)~ sizes)
summary(model)
cluster_sizes <- seq(0, 1000, 100)
exp(predict(model,list(sizes=cluster_sizes)))
lines(exp(predict(model,list(sizes=cluster_sizes))))
plot(exp(predict(model,list(sizes=cluster_sizes))))
plot(x = sizes, y = obs_synon, type = 'l', xlab = "Cluster \nSize", ylab = "Observed Synonymous \nMutation Rate",
main = "Correlation between cluster size \nand observed mutation rate",
ylim = c(0.5, 0.9))
points(x = sizes, y = obs_synon, pch = 16)
cor(sizes, obs_synon)
par()
device.off()
dev.off()
plot(x = sizes, y = obs_synon, type = 'l', xlab = "Cluster \nSize", ylab = "Observed Synonymous \nMutation Rate",
main = "Correlation between cluster size \nand observed mutation rate",
ylim = c(0.5, 0.9))
points(x = sizes, y = obs_synon, pch = 16)
mar.default <- c(5,4,4,2) + 0.1
par(mar = mar.default + c(0, 4, 0, 0))
plot(x = sizes, y = obs_synon, type = 'l', xlab = "Cluster \nSize", ylab = "Observed Synonymous \nMutation Rate",
main = "Correlation between cluster size \nand observed mutation rate",
ylim = c(0.5, 0.9))
points(x = sizes, y = obs_synon, pch = 16)
top.labels
cor(obs_synon, sizes)
top.years <- c()
for(i in 1:length(top.labels)){
top.labels[i] <- aa_gen[which(aa_gen[,4] == top.labels[i]), 1]
}
top.years
i <- 1
which(aa_gen[,4] == top.labels[i])
aa_gen[,4]
top.years <- c()
for(i in 1:length(top.labels)){
top.labels[i] <- aa_gen[which(unlist(aa_gen[,4]) == top.labels[i]), 1]
}
top.years
top.years <- c()
for(i in 1:length(top.labels)){
top.labels[i] <- dna_gen[which(unlist(dna_gen[,4]) == top.labels[i]), 1]
}
i
unlist(dna_gen[,4])
top.labels[i]
top.labels
top.labels <- labels_vec[top.which]
top.labels
top.years <- c()
for(i in 1:length(top.labels)){
top.years[i] <- dna_gen[which(unlist(dna_gen[,4]) == top.labels[i]), 1]
}
top.years
top.years <- unlist(top.years)
top.years
sizes
plot(sizes, as.numeric(top.years))
sort(top.years)
plot <- cbind(sizes, top.years)
plot
plot[,order(top.years)]
order(plot$top.years)
plot(x = top.years, y = sizes)
top.labels
top.sequences <- c()
for(i in 1:length(top.labels)){
top.sequences[i] <- paste(unlist(dna_gen[which(top.labels[i] == dna_gen[,4]),5]), sep = '')
}
top.sequences
i <-
1
which(top.labels[i] == dna_gen[,4])
dna_gen[which(top.labels[i] == dna_gen[,4]),5]
unlist(dna_gen[which(top.labels[i] == dna_gen[,4]),5])
paste(unlist(dna_gen[which(top.labels[i] == dna_gen[,4]),5]), sep = '')
paste(unlist(dna_gen[which(top.labels[i] == dna_gen[,4]),5]), collapse = '')
top.sequences <- c()
for(i in 1:length(top.labels)){
top.sequences[i] <- paste(unlist(dna_gen[which(top.labels[i] == dna_gen[,4]),5]), collapse = '')
}
top.sequences
hamming.distance(top.sequences[1], top.sequences)
help("hamming.neighbors")
hamming.neighbors('hello',english.words)
hamming.distance('hello', english.words)
obs_synon
ns_s_ratio <- (1 - obs_synon) / (obs_synon)
ns_s_ratio
plot(sizes, ns_s_ratio)
non_synon
top.which
dist_mat_top <- dist_mat[top.which, top.which]
dim(top.which)
dim(dist_mat_top)
dist_mat_top
dist_mat_top
clusters(dist_mat_top)
bfs(graph.data.frame(dist_mat_top))
bfs(graph.data.frame(dist_mat_top), root = 1)
bfs(graph.data.frame(dist_mat_top), root = 8)
cex.all <- rep(2, length(vertices))
cex.all <- rep(2, length(vertices))
cex.all[top.which] <- 5
edges <- list()
for(i in 1:ncol(dist_mat)){
right <- which(dist_mat[,i] == 1)
left <- rep(i, length(right))
edges[[i]] <- cbind(left, right)
}
edges <- do.call(rbind, edges)
vertices <- unique(c(edges[,1], edges[,2]))
graph.object <- graph.data.frame(edges, vertices, directed = FALSE)
layout =  cbind(weighted_mds[,2], weighted_mds[,1])
edges.top.which <- edges[edges.which,]
edges <- edges[-edges.which,]
edges <- rbind(edges, edges.top.which)
V(graph.object)$name = NA
V(graph.object)$color = years.colors
E(graph.object)$curved = 0
V(graph.object)$size = cex.all
plot(graph.object, layout = layout, main = "MDS network plot, \nTop 20 Clusters")
legend('bottomright', legend = years_vec, fill = colors, cex = 0.8)
edges <- list()
for(i in 1:ncol(dist_mat)){
right <- which(dist_mat[,i] == 1)
left <- rep(i, length(right))
edges[[i]] <- cbind(left, right)
}
edges <- do.call(rbind, edges)
vertices <- unique(c(edges[,1], edges[,2]))
graph.object <- graph.data.frame(edges, vertices, directed = FALSE)
layout =  cbind(weighted_mds[,2], weighted_mds[,1])
edges.top.which <- edges[edges.which,]
edges <- edges[-edges.which,]
edges <- rbind(edges, edges.top.which)
V(graph.object)$name = NA
V(graph.object)$color = years.colors
E(graph.object)$curved = 0
V(graph.object)$size = cex.all
plot(graph.object, layout = layout, main = "MDS network plot, \nTop 20 Clusters")
legend('bottomright', legend = years_vec, fill = colors, cex = 0.8)
V(graph.object)$frame = NA
plot(graph.object, layout = layout, main = "MDS network plot, \nTop 20 Clusters")
V(graph.object)$frame = years.colors
plot(graph.object, layout = layout, main = "MDS network plot, \nTop 20 Clusters")
V(graph.object)$frame.color = years.colors
plot(graph.object, layout = layout, main = "MDS network plot, \nTop 20 Clusters")
cex.all <- rep(1, length(vertices))
cex.all[top.which] <- 3
plot(graph.object, layout = layout, main = "MDS network plot, \nTop 20 Clusters")
V(graph.object)$size = cex.all
plot(graph.object, layout = layout, main = "MDS network plot, \nTop 20 Clusters")
par()
E(graph.object)$color = 'gray93'
plot(graph.object, layout = layout, main = "MDS network plot, \nTop 20 Clusters")
legend('bottomright', legend = years_vec, fill = colors, cex = 0.8)
E(graph.object)$color = 'gray88'
plot(graph.object, layout = layout, main = "MDS network plot, \nTop 20 Clusters")
legend('bottomright', legend = years_vec, fill = colors, cex = 0.8)
E(graph.object)$color = 'black'
plot(graph.object, layout = layout, main = "MDS network plot, \nTop 20 Clusters")
E(graph.object)$color = 'gray34'
plot(graph.object, layout = layout, main = "MDS network plot, \nTop 20 Clusters")
legend('bottomright', legend = years_vec, fill = colors, cex = 0.8)
graph.object <- graph.data.frame(edges, vertices, directed = FALSE)
V(graph.object)$name = NA
V(graph.object)$color = years.colors
V(graph.object)$frame.color = years.colors
E(graph.object)$curved = 0
V(graph.object)$size = cex.all
plot(graph.object, layout = layout, main = "MDS network plot, \nTop 20 Clusters")
legend('bottomright', legend = years_vec, fill = colors, cex = 0.8)
years.colors <- c()
colors <- c(brewer.pal(8, "Accent"), "red")
for(i in 1:length(years)){
years.colors[i] <- colors[which(years_vec == years[i])]
remove(i)
}
V(graph.object)$name = NA
V(graph.object)$color = years.colors
V(graph.object)$frame.color = years.colors
E(graph.object)$curved = 0
V(graph.object)$size = cex.all
plot(graph.object, layout = layout, main = "MDS network plot, \nTop 20 Clusters")
legend('bottomright', legend = years_vec, fill = colors, cex = 0.8)
cex.all <- rep(1, length(vertices))
V(graph.object)$name = NA
V(graph.object)$color = years.colors
V(graph.object)$frame.color = years.colors
E(graph.object)$curved = 0
V(graph.object)$size = cex.all
plot(graph.object, layout = layout, main = "MDS network plot, \nTop 20 Clusters")
legend('bottomright', legend = years_vec, fill = colors, cex = 0.8)
i <- 1
seq_this <- unlist(seq[i])
seq_this
j <- 1
synon[which(names_aa == seq_this[j])]
seq_this[j]
names_aa
which(names_aa == seq_this[j])
synon <- c(1, 5, 5, 1, 1, 0, 3, 1, 1, 5, 2, 0, 3,
1, 1, 3, 3, 1, 1, 3)
synon[which(names_aa == seq_this[j])]
j <- 2
t.test(obs_synon, synon_rate)
cor(obs_synon, sizes)
dist_mat_top
dim(dna_gen)
load('adj_mat.RData')
dim(adj_mat)
dim(mat.new.new)
x <- load('labels_for_simp.adj.mat.RData')
x
length(labels.new.new)
rm(list = ls())
setwd('~/Desktop/CSHL/')
load('DNA_GEN.RData')
load('AA_GEN.RData')
