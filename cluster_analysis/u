setwd('~/Desktop/CSHL/')
library(igraph)
library(RColorBrewer)
load('most_prev_seq_by_year.RData')
load('AA_GEN.RData')
load('DNA_GEN.RData')
years <- c(2012, 2013, 2014, 2015, 2016, 2017)

{

par(mfrow = c(2,3))
for(i in 1:length(years)){
  load(paste('network_', years[i], '.RData', sep =''))
  network <- list()
  for(j in 1:length(test)){
    from <- names(test)[j]
    to <- names(test)[test[[j]]]
    if(identical(to, character(0))){next}
    if(length(to) < 1){next}
    small.list <- list()
    for(k in 1:length(to)){
      small.list[[k]] <- c(from, to[k])
    }
    network[[j]] <- unlist(small.list)
  }
  network <- unlist(network)
  plot(graph(network, directed = F), vertex.size = 1, vertex.label = NA,
       main = paste('Network,', years[i], sep = ' '))
  remove(test)
}}

for(i in 1:length(years)){
  load(paste('network_', years[i], '.RData', sep = ''))
  assign(paste('network_', years[i], sep = ''), test)
  assign(paste('names_', years[i], sep =''), names(test))
  remove(test)
}

networks <- c("network_2012", "network_2013", "network_2014", 
              "network_2015", "network_2016", "network_2017")
list.neighbors <- list()
for(i in 1:length(years)){
  load(paste('network_', years[i], '.RData', sep = ''))
  assign(paste('network_', years[i], sep = ''), test)
  indexes <- get(paste('network_', years[i], sep = ''))[which(names(get(paste('network_', years[i], sep = ''))) == prev[i])]
  list.neighbors[[i]] <- names(get(paste('network_', years[i], sep = '')))[unlist(indexes)]
  remove(test)
}
list.mass <- list()
for(j in 1:length(networks)){
  list.mass.network <- list()
  this <- get(networks[j])
  for(i in 1:length(this)){
    x <- this[which(names(this) == list.neighbors[[j]][i])]
    neighbors_neighbors <- names(this)[unlist(x)]
    list.mass.network[[i]] <- neighbors_neighbors
  }
  most_prev_neighbors <- names(this)[unlist(this[which(names(this) == prev[j])])]
  list.mass.network <- unlist(list.mass.network)
  list.mass[[j]] <- unique(c(list.mass.network, most_prev_neighbors))
}



#######START HERE

load('network_all_years.RData')
network_all_years <- test
remove(test)
names_all_years <- names(network_all_years)
network_list <- list()
for(i in 1:length(names_all_years)){
  if(network_all_years[[i]] == 0){next}
  network_list[[i]] <- names_all_years[network_all_years[[i]]]
}
names(network_list) <- names_all_years
network_all_years <- network_list
clustered_network <- list(network_all_years[[979]], network_all_years[[2765]], network_all_years[[3913]],
                          network_all_years[[8668]], network_all_years[[12149]], network_all_years[[18387]])
network <- matrix(NA, nrow = 352, ncol = 2)
network[,1] <- c(rep(prev[1], length(clustered_network[[1]])), rep(prev[2], length(clustered_network[[2]])),
                 rep(prev[3], length(clustered_network[[3]])), rep(prev[4], length(clustered_network[[4]])),
                 rep(prev[5], length(clustered_network[[5]])), rep(prev[6], length(clustered_network[[6]])))
network[,2] <- c(clustered_network[[1]], clustered_network[[2]], clustered_network[[3]],
                 clustered_network[[4]], clustered_network[[5]], clustered_network[[6]])

list.list <- list()
for(i in 1:length(clustered_network)){
  net <- clustered_network[[i]]
  expand.list <- list()
  col.list <- list()
  for(j in 1:length(net)){
    which.net <- which(names_all_years == net[j])
    if(length(which.net) == 0){next}
    expand.list[[j]] <- network_all_years[[which.net]]
    if(is.null(expand.list[[j]])){next}
    from = net[j]
    if(expand.list[[j]] == 0){next}
    to = expand.list[[j]]
    col.list[[j]] <- cbind(rep(from, length(to)), to)
  }
  list.list[[i]] <- c(col.list, col.list.to)
  list.list[[i]] <- do.call(rbind, list.list[[i]])
  print(i / length(clustered_network))
}
network_one_neighbors <- do.call(rbind, list.list)
network_one <- rbind(network, network_one_neighbors)
network_one <- cbind(network_one, 'distance' =rep(1, 1374))




names(clustered_network) <- prev
names_all <- dna_gen[,4]
names_all <- unlist(names_all)
for(i in 1:length(clustered_network)){
  clustered_network[[i]] <-  names_all[clustered_network[[i]]]
}


##distance 2
{# load('network_all_years_dist_two.RData')
# network_all_years_two <- test
# remove(test)
# names_all_years_two <- names(network_all_years_two)
# which(names_all_years == prev[3])
# clustered_network_two <- list(network_all_years_two[[979]], network_all_years_two[[2765]], network_all_years_two[[3913]],
#                           network_all_years_two[[8668]], network_all_years_two[[12149]], network_all_years_two[[18387]])
# names(clustered_network_two) <- prev
# names_all <- dna_gen[,4]
# names_all <- unlist(names_all)
# for(i in 1:length(clustered_network_two)){
#   clustered_network_two[[i]] <-  names_all[clustered_network_two[[i]]]
# }
# network_two <- matrix(NA, nrow = 733, ncol = 2)
# network_two[,1] <- c(rep(prev[1], length(clustered_network_two[[1]])), rep(prev[2], length(clustered_network_two[[2]])),
#                  rep(prev[3], length(clustered_network_two[[3]])), rep(prev[4], length(clustered_network_two[[4]])),
#                  rep(prev[5], length(clustered_network_two[[5]])), rep(prev[6], length(clustered_network_two[[6]])))
# network_two[,2] <- c(unlist(clustered_network_two))
# list.list <- list()
# for(i in 1:length(clustered_network_two)){
#   net <- clustered_network_two[[i]]
#   expand.list <- list()
#   col.list <- list()
#   for(j in 1:length(net)){
#     which.net <- which(names_all_years_two == net[j])
#     if(length(which.net) == 0){next}
#     expand.list[[j]] <- network_all_years_two[[which.net]]
#     if(is.null(expand.list[[j]])){next}
#     from = net[j]
#     if(expand.list[[j]] == 0){next}
#     to = c(names_all_years_two[expand.list[[j]]])
#     col.list[[j]] <- cbind(rep(from, length(to)), to)
#   }
#   list.list[[i]] <- col.list
#   list.list[[i]] <- do.call(rbind, list.list[[i]])
# }
# network_two_neighbors <- do.call(rbind, list.list)
# network_two <- rbind(network_two, network_two_neighbors)
# network_two <- cbind(network_two, 'distance' =rep(2, 4006))
}
  



test.net <- rbind(network_one)
from <- unique(test.net[,1])
to <- unique(test.net[,2])
all <- c(from, to)
vertices <- unique(all)


years.unique <- c()
years_colors <- c()
colors <- brewer.pal(6, "Spectral")
for(i in 1:length(vertices)){
  years.unique[i] <- dna_gen[which(dna_gen[,4] == unique(all)[i]),1]
  years_colors[i] <- colors[which(years == years.unique[i])]
}
years.unique <- unlist(years.unique)
colnames(test.net) <- c('from', 'to', 'weight')


vert_colors <- c(rep("black",6),years_colors[7:length(years_colors)])
edges <- test.net
vertices <- cbind(unique(all), vert_colors, c(years, rep(NA,(length(years_colors) - 6))), years.unique)
graph.object <- graph.data.frame(edges, vertices, directed = F)
V(graph.object)$frame.color <- NA
plot(graph.object, vertex.size = 3, vertex.label = vertices[,3], vertex.color = vertices[,2], 
     main = "Nucleotide Backbone, \nOne Nucleotide Neighbor",
     vertex.label.color="black", edge.width = edges[,3])
legend(x = -2, y = 1, years, fill = colors)


###find which sequences have the abnormal mutations, put them in black to see if they are clustered
seq <- list()
for(i in 1:nrow(aa_gen)){
  seq[[i]] <- unname(unlist(aa_gen[i,5]))
}
vec.mut.291 <- c()
for(i in 1:length(seq)){
  if(seq[[i]][291] == 'd'){vec.mut.291[i] <- aa_gen[i,4]}else{next}
  print(i / length(seq))
}
vec.mut.291 <- unlist(vec.mut.291)

vert_colors <- c(rep("black",6),years_colors[7:length(years_colors)])
vert_colors[802] <- 'black'
vert_colors[892] <- 'black'
edges <- test.net
vertices <- cbind(unique(all), vert_colors, c(years, rep(NA,(length(years_colors) - 6))), years.unique)
vertices[802,3] <- vertices[802,1]
vertices[892,3] <- vertices[892,1]
graph.object <- graph.data.frame(edges, vertices, directed = F)
V(graph.object)$frame.color <- NA
plot(graph.object, vertex.size = 3, vertex.label = vertices[,3], vertex.color = vertices[,2], 
     main = "Nucleotide Backbone, \nOne Nucleotide Neighbor \n g291d Mutation",
     vertex.label.color="black", edge.width = edges[,3])
legend(x = -2, y = 1, years, fill = colors)


vec.mut.156 <- c()
for(i in 1:length(seq)){
  if(seq[[i]][156] == 'r'){vec.mut.156[i] <- aa_gen[i,4]}else{next}
  print(i / length(seq))
}
vec.mut.156 <- unlist(vec.mut.156)

vert_colors <- c(rep("black",6),years_colors[7:length(years_colors)])
vert_colors[549] <- 'black'
vert_colors[633] <- 'black'
edges <- test.net
vertices <- cbind(unique(all), vert_colors, c(years, rep(NA,(length(years_colors) - 6))), years.unique)
vertices[549,3] <- vertices[549,1]
vertices[633,3] <- vertices[633,1]
graph.object <- graph.data.frame(edges, vertices, directed = F)
V(graph.object)$frame.color <- NA
V(graph.object)$label.cex <- 0.5
plot(graph.object, vertex.size = 3, vertex.label = vertices[,3], vertex.color = vertices[,2], 
     main = "Nucleotide Backbone, \nOne Nucleotide Neighbor \n i156r Mutation",
     vertex.label.color="black", edge.width = edges[,3])
legend(x = -2, y = 1, years, fill = colors)

